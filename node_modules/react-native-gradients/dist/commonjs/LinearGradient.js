"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinearGradient = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNativeSvg = _interopRequireWildcard(require("react-native-svg"));
var _utils = require("./utils");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
const LinearGradient = _ref => {
  let {
    angle,
    colorList
  } = _ref;
  const {
    x1,
    x2,
    y1,
    y2
  } = (0, _react.useMemo)(() => (0, _utils.getAnglePercentageObject)(angle), [angle]);
  return /*#__PURE__*/_react.default.createElement(_reactNativeSvg.default, {
    height: "100%",
    width: "100%"
  }, /*#__PURE__*/_react.default.createElement(_reactNativeSvg.Defs, null, /*#__PURE__*/_react.default.createElement(_reactNativeSvg.LinearGradient, {
    id: "grad",
    x1: `${x1}%`,
    y1: `${y1}%`,
    x2: `${x2}%`,
    y2: `${y2}%`
  }, colorList.map((value, index) => /*#__PURE__*/_react.default.createElement(_reactNativeSvg.Stop, {
    key: `LinerGradientItem_${index}`,
    offset: value.offset,
    stopColor: value.color,
    stopOpacity: value.opacity
  })))), /*#__PURE__*/_react.default.createElement(_reactNativeSvg.Rect, {
    x: "0",
    y: "0",
    width: "100%",
    height: "100%",
    fill: "url(#grad)"
  }));
};
exports.LinearGradient = LinearGradient;
//# sourceMappingURL=LinearGradient.js.map